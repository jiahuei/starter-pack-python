trigger:
  branches:
    include:
      - "*"

jobs:
  - job: "Python_Lint"
    pool:
      vmImage: "ubuntu-latest" # other options: 'macOS-latest', 'windows-latest'
    strategy:
      matrix:
        py38:
          python.version: "3.8"
    displayName: "Python linting and formatting checks"

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"
      - bash: |
          set -e
          python3 -m pip install .[lint]
        displayName: "Install linting libraries"
      - bash: |
          set -e
          black --check --verbose --diff .
        displayName: "Check Python files using Black"
      - bash: |
          set -e
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        displayName: "Run flake8 lint tests (errors)"
      - bash: |
          set -e
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
        displayName: "Run flake8 lint tests (warnings)"

  - job: "Prettier_Lint"
    pool:
      vmImage: "ubuntu-latest"
    displayName: "Prettier formatting checks"

    steps:
      - bash: |
          npm install -g prettier@2.6
          prettier --check .
        displayName: "Check files using Prettier"
